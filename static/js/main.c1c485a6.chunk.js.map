{"version":3,"sources":["function.js","App.js","reportWebVitals.js","index.js"],"names":["result","max","interest","useStyles","makeStyles","root","bullet","display","margin","transform","title","fontSize","pos","marginBottom","Buttonclick","classes","useState","money","setmoney","setresult","matches","useMediaQuery","defaultOptions1","loop","autoplay","animationData","money1","rendererSettings","preserveAspectRatio","defaultOptions2","money2","className","AppBar","position","style","backgroundColor","Toolbar","color","Container","maxWidth","Grid","container","spacing","item","xs","md","options","height","width","Card","opacity","marginTop","CardContent","noValidate","autoComplete","TextField","id","label","value","marginLeft","type","variant","onChange","e","target","Button","component","cardStyle","onClick","data","newmoney","Number","receive","setTimeout","undefined","Typography","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1c485a6.chunk.js","sourcesContent":["let result = \"\";\r\nlet max = 0;\r\nexport const receive = (data) => {\r\n  const newmoney = Number(data.money);\r\n  max = newmoney;\r\n  interest();\r\n\r\n\r\n\r\n};\r\n\r\n\r\nexport const interest = () => {\r\n  if (max > 500000) {\r\n    result = \"จะได้รับดอกเบี้ย 10%\";\r\n  }\r\n  else if (max >= 100000) {\r\n    result = \"จะได้รับดอกเบี้ย 7%\";\r\n  }\r\n  else if (max >=10000){\r\n    result = \"จะได้รับดอกเบี้ย 3%\";\r\n  }\r\n  else{\r\n    result = \"ไม่ได้รับดอกเบี้ย\"\r\n  }\r\n};\r\n\r\nexport const sendbackres = () => {\r\n  return result;\r\n};\r\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Lottie from \"react-lottie\";\nimport money1 from \"./lottie/37464-repayment-concept-e-wallet-payment-inprogress.json\";\nimport money2 from \"./lottie/43325-money-dollars-and-bitcoin.json\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Container } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { receive, sendbackres } from \"./function\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\n\n\nconst useStyles = makeStyles({\n  root: {\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\n\nexport default function Buttonclick() {\n  const classes = useStyles();\n  const [money, setmoney] = useState();\n  const [result, setresult] = useState();\n\n  const matches = useMediaQuery(\"(max-width:600px)\");\n\n  function senddata() {\n    const data = {\n      money: money,\n    };\n    receive(data);\n\n    setTimeout(() => {\n      const res = sendbackres();\n\n      setresult(res);\n\n    }, 500);\n  }\n\n  const defaultOptions1 = {\n    loop: true,\n    autoplay: true,\n    animationData: money1,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const defaultOptions2 = {\n    loop: true,\n    autoplay: true,\n    animationData: money2,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <AppBar position=\"static\" style={{ backgroundColor: \"#2ed573\" }}>\n          <Toolbar>\n            <text color=\"inherit\">ดอกเบี้ยเงินฝากหุ้น</text>\n          </Toolbar>\n        </AppBar>\n      </div><br></br>\n      <Container maxWidth=\"xl\">\n        <Grid container spacing={30}>\n          <Grid item xs={12} md={7}>\n            <Lottie\n              options={defaultOptions1}\n              height={matches ? 100 : 500}\n              width={matches ? 200 : 500}\n            />\n          </Grid>\n          <Grid item xs={12} md={5} >\n            <Card\n              className={classes.root}\n              style={{ backgroundColor: \"#2f3542\", opacity: \"75%\", marginTop: 50 }}>\n              <CardContent width={50}>\n                <form className={classes.root} noValidate autoComplete=\"off\">\n                  <TextField\n                    id=\"outlined-basic\"\n                    label=\"เงินที่ต้องการคำนวณ\"\n                    value={money}\n                    style={{ marginLeft: 105 }}\n                    type=\"number\"\n                    variant=\"filled\"\n                    onChange={(e) => setmoney(e.target.value)}\n\n                  />\n                </form>\n                <br></br>\n                <Button\n                  variant=\"contained\"\n                  component=\"span\"\n                  className={classes.cardStyle}\n                  style={{ backgroundColor: \"#2ed573\", marginLeft: 160 }}\n                  onClick={senddata}\n                >\n\n                  ดอกเบี้ยที่จะได้รับ\n                </Button>\n                {result !== undefined && result !== null ? (\n                  <div>\n                    <Typography\n                      variant=\"h5\"\n                      style={{ textAlign: \"center\", margin: 10 }}\n                    >\n                      interest : {result}\n                    </Typography>\n                  </div>\n                ) : (\n                    <h1 className={classes.cardStyle}></h1>\n                  )}\n                <Lottie\n                  options={defaultOptions2}\n                  height={100}\n                  width={150}\n                />\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n\n  );\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}